export default {
  'pages.project': '项目',
  'pages.project.create': '创建项目',
  'pages.project.list': '项目列表',
  'pages.project.projectCode': '项目编码',
  'pages.project.projectName': '项目名称',
  'pages.project.remark': '备注',
  'pages.project.createTime': '创建时间',
  'pages.project.updateTime': '更新时间',
  'pages.project.open': '进入项目',
  'pages.project.projectCode.placeholder': '请输入项目编码',

  'pages.project.di.dataSource': '数据源',
  'pages.project.di.dataSource.dataSourceName': '数据源名称',
  'pages.project.di.dataSource.dataSourceType': '数据源类型',
  'pages.project.di.dataSource.props': '连接属性',
  'pages.project.di.dataSource.remark': '备注',
  'pages.project.di.dataSource.jdbcUrl': 'JDBC URL',
  'pages.project.di.dataSource.driverClassName': '驱动类名',
  'pages.project.di.dataSource.username': '用户名',
  'pages.project.di.dataSource.password': '密码',
  'pages.project.di.dataSource.password.show': '查看密码',
  'pages.project.di.dataSource.databaseName': '数据库名称',
  'pages.project.di.dataSource.port': '端口号',
  'pages.project.di.dataSource.host': '主机地址',
  'pages.project.di.dataSource.additionalProps': '扩展属性',
  'pages.project.di.dataSource.additionalProps.placeholder':
    '按照key:value格式配置属性，每个属性一行。例如：\nserverTimezone:Asia/Shanghai\ncharacterEncoding:UTF-8',
  'pages.project.di.dataSource.createTime': '创建时间',
  'pages.project.di.dataSource.updateTime': '更新时间',
  'pages.project.di.dataSource.bootstrapServers': 'Kafka集群地址',
  'pages.project.di.dataSource.httpPort': 'HTTP端口号',
  'pages.project.di.dataSource.testConnect': '测试连接',
  'pages.project.di.dataSource.testConnect.success': '连接成功',
  'pages.project.di.dataSource.dataSourceType.chose': '选择数据源类型',
  'pages.project.di.dataSource.dataSourceType.rdbms': '关系型数据库',
  'pages.project.di.dataSource.dataSourceType.bigdata': '大数据',
  'pages.project.di.dataSource.dataSourceType.mq': '消息队列',
  'pages.project.di.dataSource.dataSourceType.other': '其他',
  'pages.project.di.dataSource.clickhosue.host.tooltip':
    'ClickHouse cluster address,allowing multiple hosts to be specified. Such as "host1:8123,host2:8123"',

  // 'pages.project.di.batch':''
  'pages.project.dir': '目录',
  'pages.project.dir.directoryName': '目录名称',
  'pages.project.di.job': 'SeaTunnel',
  'pages.project.di.jobCode': '作业编码',
  'pages.project.di.jobName': '作业名称',
  'pages.project.di.jobType': '作业类型',
  'pages.project.di.jobStatus': '作业状态',
  'pages.project.di.runtimeState': '运行状态',
  'pages.project.di.jobCrontab': 'crontab表达式',
  'pages.project.di.directory': '目录',
  'pages.project.di.jobVersion': '版本号',
  'pages.project.di.createTime': '创建时间',
  'pages.project.di.updateTime': '更新时间',
  'pages.project.di.remark': '备注',
  'pages.project.di.run': '启动',
  'pages.project.di.stop': '停止',
  'pages.project.di.define': '流程定义',
  'pages.project.di.setting': '定时设置',
  'pages.project.di.job.crontab.custom': '自定义',
  'pages.project.di.job.crontab.minute': '分钟',
  'pages.project.di.job.crontab.every': '每',
  'pages.project.di.job.crontab.range': '区间',
  'pages.project.di.job.crontab.range.from': '从',
  'pages.project.di.job.crontab.range.to': '至',
  'pages.project.di.job.crontab.loop': '循环',
  'pages.project.di.job.crontab.loop.from': '从',
  'pages.project.di.job.crontab.loop.to': '开始，每',
  'pages.project.di.job.crontab.loop.times': '一次',
  'pages.project.di.job.crontab.designated': '指定',
  'pages.project.di.job.crontab.undesignated': '不指定',
  'pages.project.di.job.crontab.undesignated.day': '不指定 (指定日时，周需设置为不指定)',
  'pages.project.di.job.crontab.undesignated.week': '不指定 (指定周时，日需设置为不指定)',
  'pages.project.di.job.crontab.lastday': '月最后一日',
  'pages.project.di.job.crontab.hour': '小时',
  'pages.project.di.job.crontab.day': '日',
  'pages.project.di.job.crontab.month': '月',
  'pages.project.di.job.crontab.week': '周',
  'pages.project.di.job.crontab.title': 'contrab完整表达式',
  'pages.project.di.job.crontab.next5': '近5次运行时间',
  'pages.project.di.job.realtime': '实时作业',
  'pages.project.di.job.batch': '周期作业',
  'pages.project.di.flow.dag.start': '启动',
  'pages.project.di.flow.dag.stop': '停止',
  'pages.project.di.flow.dag.save': '保存',
  'pages.project.di.flow.dag.publish': '发布',
  'pages.project.di.flow.dag.preview': '预览',
  'pages.project.di.flow.dag.submit': '提交',
  'pages.project.di.flow.dag.port.in': '输入桩',
  'pages.project.di.flow.dag.port.out': '输出桩',
  'pages.project.di.flow.dag.prop': '参数设置',
  'pages.project.di.flow.dag.prop.jobAttr': '作业变量',
  'pages.project.di.flow.dag.prop.jobProp': '作业属性',
  'pages.project.di.flow.dag.prop.engineProp': '引擎属性',
  'pages.project.di.flow.dag.prop.placeholder': '按照key=value格式配置属性,每个属性一行',
  'pages.project.di.flow.dag.fullScreen': '全屏',
  'pages.project.di.flow.dag.fullScreenExit': '退出全屏',
  'pages.project.di.flow.dag.zoomIn': '放大',
  'pages.project.di.flow.dag.zoomOut': '缩小',
  'pages.project.di.flow.dag.zoomFit': '缩放到适应屏幕',
  'pages.project.di.flow.dag.zoomTo': '当前缩放比例:{factor}',
  'pages.project.di.step.stepTitle': '步骤标题',
  'pages.project.di.step.x': 'x坐标',
  'pages.project.di.step.y': 'y坐标',

  'pages.project.di.step.dataSourceType': '数据源类型',
  'pages.project.di.step.dataSource': '数据源',

  // schema
  'pages.project.di.step.schema': 'Schema',
  'pages.project.di.step.schema.tooltip': 'Schema 结构体',
  'pages.project.di.step.schema.fields': 'Field',
  'pages.project.di.step.schema.fields.field': 'field',
  'pages.project.di.step.schema.fields.type': 'type',
  'pages.project.di.step.schema.delimiter': 'Field Delimiter',

  // socket
  'pages.project.di.step.socket.maxRetries': '重试次数',

  // jdbc
  'pages.project.di.step.jdbc.connectionCheckTimeoutSec': '数据源连接超时（秒）',
  'pages.project.di.step.jdbc.partitionColumn': '分区字段',
  'pages.project.di.step.jdbc.partitionColumn.tooltip': '只支持数值类型字段作为分区字段',
  'pages.project.di.step.jdbc.partitionLowerBound': '分区最小值',
  'pages.project.di.step.jdbc.partitionLowerBound.tooltip': 'SeaTunnel 可查询数据库获取最小值',
  'pages.project.di.step.jdbc.partitionUpperBound': '分区最大值',
  'pages.project.di.step.jdbc.partitionUpperBound.tooltip': 'SeaTunnel 可查询数据库获取最小值',
  'pages.project.di.step.jdbc.query': 'SQL',
  'pages.project.di.step.jdbc.getsql': '获取SQL',
  'pages.project.di.step.jdbc.preview': '预览结果',
  'pages.project.di.step.jdbc.batchSize': '批次数量',
  'pages.project.di.step.jdbc.batchIntervalMs': '批次间隔（毫秒）',
  'pages.project.di.step.jdbc.batch.tooltip':
    'record buffer 到达批次数量或时间到批次间隔（毫秒）时，会提交 record buffer',
  'pages.project.di.step.jdbc.maxRetries': '批次重试次数',
  'pages.project.di.step.jdbc.isExactlyOnce': '启用 Exactly once 语义',
  'pages.project.di.step.jdbc.isExactlyOnce.tooltip': '使用 XA 事务保证 Exactly once 语义',
  'pages.project.di.step.jdbc.xaDataSourceClassName': 'XA DataSource 类名',
  'pages.project.di.step.jdbc.maxCommitAttempts': '事务重试次数',
  'pages.project.di.step.jdbc.transactionTimeoutSec': '事务超时时间（秒）',
  'pages.project.di.step.jdbc.transactionTimeoutSec.tooltip': '-1 表示从不超时',

  // fake
  'pages.project.di.step.fake.rowNum': '生成数据行数',

  // base file
  'pages.project.di.step.baseFile.path': 'Path',
  'pages.project.di.step.baseFile.type': 'File Type',
  'pages.project.di.step.baseFile.schema': 'Schema',
  'pages.project.di.step.baseFile.delimiter': 'Field Delimiter',
  'pages.project.di.step.baseFile.parsePartitionFromPath': 'Enable Parse Partition From Path',
  'pages.project.di.step.baseFile.dateFormat': 'Date Format',
  'pages.project.di.step.baseFile.timeFormat': 'Time Format',
  'pages.project.di.step.baseFile.datetimeFormat': 'Datetime Format',
  'pages.project.di.step.baseFile.fileNameExpression': 'FileName Expression',
  'pages.project.di.step.baseFile.fileFormat': 'File Format',
  'pages.project.di.step.baseFile.filenameTimeFormat': 'FileName Time Format',
  'pages.project.di.step.baseFile.fieldDelimiter': 'Field Delimiter',
  'pages.project.di.step.baseFile.rowDelimiter': 'Row Delimiter',
  'pages.project.di.step.baseFile.partitionBy': 'Partition',
  'pages.project.di.step.baseFile.partitionDirExpression': 'Partition Dir Expression',
  'pages.project.di.step.baseFile.isPartitionFieldWriteInFile': 'Write Partition Field to File',
  'pages.project.di.step.baseFile.sinkColumns': 'Sink Columns',
  'pages.project.di.step.baseFile.isEnableTransaction': 'Enable Transaction',

  // hdfs file
  'pages.project.di.step.hdfsFile.defaultFS': 'fs.defaultFS',
  'pages.project.di.step.hdfsFile.defaultFS.tooltip': '格式:hdfs://namenode001',

  // ftp file
  'pages.project.di.step.ftpFile.host': 'Host',
  'pages.project.di.step.ftpFile.port': 'Port',
  'pages.project.di.step.ftpFile.username': 'Username',
  'pages.project.di.step.ftpFile.password': 'Password',

  // oss file
  'pages.project.di.step.ossFile.endpoint': 'Endpoint',
  'pages.project.di.step.ossFile.bucket': 'Bucket',
  'pages.project.di.step.ossFile.accessKey': 'Access Key',
  'pages.project.di.step.ossFile.accessSecret': 'Access Secret',

  // s3
  'pages.project.di.step.s3.bucket': 'Bucket',
  'pages.project.di.step.s3.accessKey': 'Access Key',
  'pages.project.di.step.s3.accessSecret': 'Access Secret',

  // http
  'pages.project.di.step.http.method': 'Method',
  'pages.project.di.step.http.url': 'URL',
  'pages.project.di.step.http.headers': 'Header',
  'pages.project.di.step.http.header': 'header',
  'pages.project.di.step.http.params': 'Param',
  'pages.project.di.step.http.param': 'param',
  'pages.project.di.step.http.body': 'Body',
  'pages.project.di.step.http.value': 'value',
  'pages.project.di.step.http.format': 'Format',
  'pages.project.di.step.http.schema': 'Schema',
  'pages.project.di.step.http.pollIntervalMs': 'Poll Interval(milliseconds)',
  'pages.project.di.step.http.retry': 'Retry',
  'pages.project.di.step.http.retryBackoffMultiplierMs':
    'Retry-Backoff times(milliseconds) Multiplier',
  'pages.project.di.step.http.retryBackoffMaxMs': 'Maximum Retry-Backoff times(milliseconds)',

  // wechat
  'pages.project.di.step.wechat.url': 'WeChat Robot URL',
  'pages.project.di.step.wechat.mentionedList': 'Mentione(@) userIds',
  'pages.project.di.step.wechat.mentionedList.tooltip': 'Mentione everybody by "@all"',
  'pages.project.di.step.wechat.userId': 'UserId',
  'pages.project.di.step.wechat.mentionedMobileList': 'Mentione(@) mobiles',
  'pages.project.di.step.wechat.mentionedMobileList.tooltip': 'Mentione everybody by "@all"',
  'pages.project.di.step.wechat.mobile': 'Mobile',

  // feishu
  'pages.project.di.step.feishu.url': 'Feishu Robot URL',
  'pages.project.di.step.feishu.headers': 'Header',
  'pages.project.di.step.feishu.header': 'header',
  'pages.project.di.step.feishu.value': 'value',

  // dingtalk
  'pages.project.di.step.dingtalk.url': 'DingTalk Robot URL',
  'pages.project.di.step.dingtalk.secret': 'Secret',

  // email
  'pages.project.di.step.email.emailHost': 'Email Server Host',
  'pages.project.di.step.email.emailTransportProtocol': 'Email Transport Protocol',
  'pages.project.di.step.email.emailFromAddress': 'Sender Address',
  'pages.project.di.step.email.emailSmtpAuth': 'Enable SMTP Auth',
  'pages.project.di.step.email.emailAuthorizationCode': 'SMTP Authorization Code',
  'pages.project.di.step.email.emailToAddress': 'Receiver Address',
  'pages.project.di.step.email.emailMessageHeadline': 'Email Message Headline',
  'pages.project.di.step.email.emailMessageContent': 'Email Message Content',

  // hudi
  'pages.project.di.step.hudi.tablePath': 'Table Path',
  'pages.project.di.step.hudi.tableType': 'Table Type',
  'pages.project.di.step.hudi.confFiles': 'Hadoop Conf Path',
  'pages.project.di.step.hudi.useKerberos': '启用 Kerberos',
  'pages.project.di.step.hudi.kerberosPrincipal': 'Kerberos Principal',
  'pages.project.di.step.hudi.kerberosPrincipalFile': 'Kerberos Principal File',

  // iceberg
  'pages.project.di.step.iceberg.catalogType': 'Catalog Type',
  'pages.project.di.step.iceberg.catalogName': 'Catalog',
  'pages.project.di.step.iceberg.namespace': 'Namespace',
  'pages.project.di.step.iceberg.table': 'Table',
  'pages.project.di.step.iceberg.uri': 'Hive Metadata thrift URI',
  'pages.project.di.step.iceberg.warehouse': 'Warehouse',
  'pages.project.di.step.iceberg.caseSensitive': 'Case Sensitive',
  'pages.project.di.step.iceberg.fields': 'Fields',
  'pages.project.di.step.iceberg.useSnapshotId': 'Use SnapshotId',
  'pages.project.di.step.iceberg.startSnapshotId': 'Start SnapshotId',
  'pages.project.di.step.iceberg.endSnapshotId': 'End SnapshotId',
  'pages.project.di.step.iceberg.startSnapshotTimestamp': 'Start Snapshot Timestamp',
  'pages.project.di.step.iceberg.useSnapshotTimestamp': 'Use Snapshot Timestamp',
  'pages.project.di.step.iceberg.streamScanStrategy': 'Stream Scan Strategy',

  // clickhouse
  'pages.project.di.step.clickhosue.table': '导出表名',
  'pages.project.di.step.clickhosue.bulkSize': '导出表名',
  'pages.project.di.step.clickhosue.fields': '导出字段信息',
  'pages.project.di.step.clickhosue.fields.tooltip': 'For example, : id,name',
  'pages.project.di.step.clickhosue.splitMode': '是否分片',
  'pages.project.di.step.clickhosue.shardingKey': 'shardingKey 分片字段',
  'pages.project.di.step.clickhosue.splitMode.tooltip':
    "Split mode when table is distributed engine,This mode only support clickhouse table which engine is 'Distributed'",
  'pages.project.di.step.clickhosue.clickhouseConf': 'clickhouse jdbc参数',
  'pages.project.di.step.clickhosue.clickhouseConf.tooltip':
    ' For example, the way to specify socket_timeout is: clickhouse.socket_timeout = 50000',
  'pages.project.di.step.clickhosue.clickhouseConf.list': 'Property',
  'pages.project.di.step.clickhosue.clickhouseConf.key': 'Property',
  'pages.project.di.step.clickhosue.clickhouseConf.key.placeholder': 'socket_timeout',
  'pages.project.di.step.clickhosue.clickhouseConf.value': 'Value',
  'pages.project.di.step.clickhosue.clickhouseConf.value.placeholder': '50000',
  'pages.project.di.step.clickhosue.sql': 'SQL',
  'pages.project.di.step.clickhosue.database': '数据库',

  // hive
  'pages.project.di.step.hive.tableName': 'Hive Table Name',
  'pages.project.di.step.hive.metastoreUri': 'Hive Metastore URI',
  'pages.project.di.step.hive.metastoreUri.tooltip': 'example : thrift://ctyun7:9083',
  'pages.project.di.step.hive.partitionBy': 'Partition',
  'pages.project.di.step.hive.partitionBy.tooltip': 'example : "test_par1", "test_par2"',
  'pages.project.di.step.hive.sinkColumns': 'Write Columns',
  'pages.project.di.step.hive.sinkColumns.tooltip':
    'example : "test_tinyint", "test_smallint", "test_int", "test_bigint", "test_boolean", "test_float"',
  'pages.project.di.step.hive.isEnableTransaction': 'Enable Transaction',
  'pages.project.di.step.hive.isEnableTransaction.tooltip': 'Only support true now',
  'pages.project.di.step.hive.saveMode': 'saveMode',
  'pages.project.di.step.hive.saveMode.tooltip':
    'Streaming Job not support overwrite. Storage mode, we need support overwrite and append. append is now supported.',

  // kudu
  'pages.project.di.step.kudu.master': 'Master',
  'pages.project.di.step.kudu.table': 'Table',
  'pages.project.di.step.kudu.savemode': '写入模式',
  'pages.project.di.step.kudu.columnsList': '字段列表',

  // kafka
  'pages.project.di.step.kafka.topic': 'Topic',
  'pages.project.di.step.kafka.topic.placeholder': 'topic1,topic2',
  'pages.project.di.step.kafka.pattern': 'pattern',
  'pages.project.di.step.kafka.conf': 'Kafka Configuration',
  'pages.project.di.step.kafka.conf.tooltip':
    'The way to specify parameters is to add the prefix kafka. to the original parameter name. For example, the way to specify auto.offset.reset is: kafka.auto.offset.reset = latest',
  'pages.project.di.step.kafka.conf.list': 'Configuration',
  'pages.project.di.step.kafka.conf.key': 'Configuration',
  'pages.project.di.step.kafka.conf.key.placeholder': 'auto.offset.reset',
  'pages.project.di.step.kafka.conf.value': 'Value',
  'pages.project.di.step.kafka.conf.value.placeholder': 'latest',
  'pages.project.di.step.kafka.pattern.tooltip':
    'If pattern is set to true,the regular expression for a pattern of topic names to read from. All topics in clients with names that match the specified regular expression will be subscribed by the consumer.',
  'pages.project.di.step.kafka.consumerGroup': 'consumerGroup',
  'pages.project.di.step.kafka.consumerGroup.tooltip':
    'Kafka consumer group id, used to distinguish different consumer groups',
  'pages.project.di.step.kafka.commit_on_checkpoint': 'commit_on_checkpoint',
  'pages.project.di.step.kafka.commit_on_checkpoint.tooltip':
    "If true the consumer's offset will be periodically committed in the background.\n",
  'pages.project.di.step.kafka.format': 'Format',
  'pages.project.di.step.kafka.fieldDelimiter': 'Field Delimiter',
  'pages.project.di.step.kafka.semantic': 'Semantic',
  'pages.project.di.step.kafka.partitionKey': 'Partition Key',
  'pages.project.di.step.kafka.partition': 'Partition',
  'pages.project.di.step.kafka.assignPartitions': 'Assign Partitions',
  'pages.project.di.step.kafka.assignPartition': 'Partition',
  'pages.project.di.step.kafka.transactionPrefix': 'Transaction Prefix',

  // iotdb
  'pages.project.di.step.iotdb.nodeUrls': 'Node URLs',
  'pages.project.di.step.iotdb.username': 'Username',
  'pages.project.di.step.iotdb.password': 'Password',
  'pages.project.di.step.iotdb.sql': 'SQL',
  'pages.project.di.step.iotdb.fields': 'Fields',
  'pages.project.di.step.iotdb.fetchSize': 'Fetch Size',
  'pages.project.di.step.iotdb.thriftDefaultBufferSize': 'Default Thrift Buffer Size',
  'pages.project.di.step.iotdb.thriftMaxFrameSize': 'Max Thrift Max Size',
  'pages.project.di.step.iotdb.enableCacheLeader': 'Enable Cache Leader',
  'pages.project.di.step.iotdb.version': 'Version',
  'pages.project.di.step.iotdb.numPartitions': 'Partition Num',
  'pages.project.di.step.iotdb.lowerBound': 'Partition Lower Bound',
  'pages.project.di.step.iotdb.upperBound': 'Partition Upper Bound',
  'pages.project.di.step.iotdb.batchSize': 'Batch Size',
  'pages.project.di.step.iotdb.batchIntervalMs': 'Batch Interval(milliseconds)',
  'pages.project.di.step.iotdb.maxRetries': 'Retry Num',
  'pages.project.di.step.iotdb.retryBackoffMultiplierMs': 'Retry Backoff Multiplier(milliseconds)',
  'pages.project.di.step.iotdb.maxRetryBackoffMs': 'Retry Max Backoff(milliseconds)',
  'pages.project.di.step.iotdb.zoneId': 'Time Zone ID',
  'pages.project.di.step.iotdb.enableRpcCompression': 'Enable RPC Compression',
  'pages.project.di.step.iotdb.connectionTimeoutInMs': 'Connection Timeout(milliseconds)',

  // mongodb
  'pages.project.di.step.mongodb.uri': 'URI',
  'pages.project.di.step.mongodb.database': 'Database',
  'pages.project.di.step.mongodb.collection': 'Collection',

  // redis
  'pages.project.di.step.redis.host': 'Host',
  'pages.project.di.step.redis.port': 'Port',
  'pages.project.di.step.redis.auth': 'Authentication Password',
  'pages.project.di.step.redis.keys': 'Keys Pattern',
  'pages.project.di.step.redis.dataType': 'Data Type',
  'pages.project.di.step.redis.format': 'Format',
  'pages.project.di.step.redis.key': 'Key',

  // pulsar
  'pages.project.di.step.pulsar.clientServiceUrl': 'Client Service URL',
  'pages.project.di.step.pulsar.adminServiceUrl': 'Admin Service URL',
  'pages.project.di.step.pulsar.authPluginClass': 'Auth Plugin Class',
  'pages.project.di.step.pulsar.authParams': 'Auth Params',
  'pages.project.di.step.pulsar.subscriptionName': 'Subscription Name',
  'pages.project.di.step.pulsar.topic': 'Topic',
  'pages.project.di.step.pulsar.topic.tooltip':
    'Multiple Topics separated by semicolon like: topic-1;topic-2',
  'pages.project.di.step.pulsar.topicPattern': 'Topic Pattern',
  'pages.project.di.step.pulsar.topicDiscoveryInterval': 'Topic Discovery Interval(milliseconds)',
  'pages.project.di.step.pulsar.topicDiscoveryInterval.tooltip': 'Non-Positive value means disable',
  'pages.project.di.step.pulsar.pollTimeout': 'Poll Timeout(milliseconds)',
  'pages.project.di.step.pulsar.pollInterval': 'Poll Interval(milliseconds)',
  'pages.project.di.step.pulsar.pollBatchSize': 'Poll Batch Size',
  'pages.project.di.step.pulsar.cursorStartupMode': 'Cursor Startup Mode',
  'pages.project.di.step.pulsar.cursorStartupTimestamp': 'Cursor Startup Timestamp',
  'pages.project.di.step.pulsar.cursorResetMode': 'Cursor Reset Mode',
  'pages.project.di.step.pulsar.cursorStopMode': 'Cursor Stop Mode',
  'pages.project.di.step.pulsar.cursorStopMode.tooltip': 'Never means stream and others mean batch',
  'pages.project.di.step.pulsar.cursorStopTimestamp': 'Cursor Stop Timestamp',

  // datahub
  'pages.project.di.step.datahub.endpoint': 'Endpoint',
  'pages.project.di.step.datahub.accessId': 'Access Id',
  'pages.project.di.step.datahub.accessKey': 'Access Key',
  'pages.project.di.step.datahub.project': 'Project',
  'pages.project.di.step.datahub.topic': 'Topic',
  'pages.project.di.step.datahub.timeout': 'Connection Timeout(milliseconds)',
  'pages.project.di.step.datahub.retryTimes': 'Retry Times',
  'pages.project.di.step.datahub.retryTimes.tooltip': '0 means disable retry',

  // elasticsearch
  'pages.project.di.step.elasticsearch.hosts': 'Hosts',
  'pages.project.di.step.elasticsearch.username': 'Username',
  'pages.project.di.step.elasticsearch.password': 'Password',
  'pages.project.di.step.elasticsearch.index': 'Index',
  'pages.project.di.step.elasticsearch.maxRetrySize': 'Max Retry Size',
  'pages.project.di.step.elasticsearch.maxBatchSize': 'Max Batch Size',

  // neo4j
  'pages.project.di.step.neo4j.uri': 'URI',
  'pages.project.di.step.neo4j.username': 'Username',
  'pages.project.di.step.neo4j.password': 'Password',
  'pages.project.di.step.neo4j.bearerToken': 'Bearer Token Header',
  'pages.project.di.step.neo4j.kerberosTicket': 'Kerberos Ticket',
  'pages.project.di.step.neo4j.database': 'Database',
  'pages.project.di.step.neo4j.query': 'Query',
  'pages.project.di.step.neo4j.queryParamPosition': 'Query Param Position',
  'pages.project.di.step.neo4j.queryParamPosition.tooltip': 'Query Param Position Mapping',
  'pages.project.di.step.neo4j.queryParamPosition.list': 'Mapping',
  'pages.project.di.step.neo4j.field': 'Field',
  'pages.project.di.step.neo4j.position': 'Position',
  'pages.project.di.step.neo4j.maxConnectionTimeout': 'Max Connection Timeout(seconds)',
  'pages.project.di.step.neo4j.maxTransactionRetryTime': 'Max Transaction Retry Time(seconds)',

  // sentry
  'pages.project.di.step.sentry.dsn': 'DSN',
  'pages.project.di.step.sentry.env': 'Env',
  'pages.project.di.step.sentry.release': 'Release',
  'pages.project.di.step.sentry.enableExternalConfiguration': 'Enable External Configuration',
  'pages.project.di.step.sentry.cacheDirPath': 'Cache Dir Path',
  'pages.project.di.step.sentry.maxCacheItems': 'Max Cache Items',
  'pages.project.di.step.sentry.flushTimeoutMillis': 'Flush Timeout(milliseconds)',
  'pages.project.di.step.sentry.maxQueueSize': 'Max Queue Size',

  // influxdb
  'pages.project.di.step.influxdb.database': 'Database',
  'pages.project.di.step.influxdb.sql': 'SQL',
  'pages.project.di.step.influxdb.fields': 'fields',
  'pages.project.di.step.influxdb.splitColumn': 'Split Column',
  'pages.project.di.step.influxdb.lowerBound': 'Lower Bound',
  'pages.project.di.step.influxdb.upperBound': 'Upper Bound',
  'pages.project.di.step.influxdb.partitionNum': 'Partition Num',
  'pages.project.di.step.influxdb.epoch': 'Epoch',
  'pages.project.di.step.influxdb.queryTimeoutSec': 'Query Timeout(seconds)',
  'pages.project.di.step.influxdb.connectTimeoutMs': 'Connect Timeout(milliseconds)',

  'pages.project.job.create': '创建作业',
  'pages.project.job.createTime': '创建时间',
  'pages.project.job.name': '作业名称',
  'pages.project.job.type': '作业类型',
  'pages.project.job.creator': '创建人',
  'pages.project.job.remark': '备注',
  'pages.project.job.list': '作业列表',
};
